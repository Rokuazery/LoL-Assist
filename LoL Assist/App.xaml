<Application x:Class="LoL_Assist_WAPP.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LoL_Assist_WAPP"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <BitmapImage x:Key="Icon" UriSource="Resources/Untitled.png"/>

        <Color x:Key="aPrimary">#7160E8</Color>
        <Color x:Key="aSecondary">#403582</Color>
        <Color x:Key="bPrimary">#303030</Color>
        <Color x:Key="bSecondary">#18191C</Color>

        <SolidColorBrush x:Key="aBrushPrimary" Color="{DynamicResource aPrimary}"/>
        <SolidColorBrush x:Key="aBrushSecondary" Color="{DynamicResource aSecondary}"/>
        <SolidColorBrush x:Key="bBrushPrimary" Color="{DynamicResource bPrimary}"/>
        <SolidColorBrush x:Key="bBrushSecondary" Color="{DynamicResource bSecondary}"/>

        <Color x:Key="FontPrimaryColor">White</Color>
        <SolidColorBrush x:Key="FontPrimaryBrush" Color="{DynamicResource FontPrimaryColor}"/>

        <Color x:Key="FontSecondaryColor">Gray</Color>
        <SolidColorBrush x:Key="FontSecondaryBrush" Color="{DynamicResource FontSecondaryColor}"/>

        <Color x:Key="FontTritaryColor">#969284</Color>
        <SolidColorBrush x:Key="FontTritaryBrush" Color="{DynamicResource FontTritaryColor}"/>

        <LinearGradientBrush x:Key="BorderGradientBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="{DynamicResource aSecondary}" Offset="1"/>
            <GradientStop Color="{DynamicResource aPrimary}"/>
        </LinearGradientBrush>

        <Color x:Key="PrimaryColor">#1e2328</Color>
        <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource PrimaryColor}"/>

        <LinearGradientBrush x:Key="SelectedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop x:Name="BorderBrushTop" Color="{DynamicResource aPrimary}" Offset="0"/>
            <GradientStop x:Name="BorderBrushBot" Color="#A093EF" Offset="1"/>
        </LinearGradientBrush>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="CheckboxSelectedBorder" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="{DynamicResource aPrimary}" Offset="0"/>
            <GradientStop Color="#A093EF" Offset="1"/>
        </LinearGradientBrush>
        
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="White"/>
        <Style x:Key="LeagueCheckboxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource bBrushPrimary}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderGradientBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource FontSecondaryBrush}"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,3,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckboxSelectedBorder}"/>
                                <Setter Property="Foreground" Value="{DynamicResource FontPrimaryBrush}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource FontPrimaryBrush}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource FontPrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                <Setter Property="Background" Value="{DynamicResource aBrushPrimary}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                <Setter Property="Background" Value="{DynamicResource bBrushPrimary}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>

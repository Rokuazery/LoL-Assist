<UserControl x:Class="LoL_Assist_WAPP.Views.ChampionPickerPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LoL_Assist_WAPP.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Style>
        <Style>
            <Style.Triggers>
                <EventTrigger RoutedEvent="UserControl.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="0.0"
                                             To="1.0"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <Grid>
        <Border Background="Black" Opacity="0.8"/>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <!--<ColumnDefinition Width="1*"/>-->
            </Grid.ColumnDefinitions>

            <!--<Grid Grid.ColumnSpan="3" Grid.Row="0" Margin="5">
                --><!--<TextBlock Text="Auto Pick Config" Foreground="{DynamicResource FontPrimaryBrush}" FontWeight="DemiBold"/>--><!--
            </Grid>-->

            <Grid Grid.Column="0" Margin="5,10,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Margin="0,10,0,5" HorizontalAlignment="Center">
                        <TextBlock Text="Champions" Foreground="{DynamicResource FontPrimaryBrush}" FontWeight="DemiBold"/>
                        <Border Height="2" Margin="-5,2,-5,0" Background="{DynamicResource aBrushPrimary}"/>
                    </StackPanel>
                    
                    <ListView x:Name="Champions" Background="Transparent" ItemsSource="{Binding ChampionCollectionView, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Grid.Row="1">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Padding" Value="4,1"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Opacity="0.6" CornerRadius="5">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="Bd" Value="#312862"/>
                                                        <Setter Property="BorderBrush" TargetName="Bd" Value="White"/>
                                                        <Setter Property="Opacity" TargetName="Bd" Value="1"/>
                                                </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="26"/>
                                        <ColumnDefinition Width="100"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Visibility="{Binding ElementName=champImgBrush,Path=ImageSource, Converter={StaticResource NullToVisibleConverter}}" Grid.Column="0" Height="26">
                                        <Ellipse Fill="{DynamicResource bBrushPrimary}"/>
                                        <Ellipse Grid.Column="0" Height="26">
                                            <Ellipse.Fill>
                                                <ImageBrush ImageSource="{StaticResource NoIcon}"/>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                    </Grid>
                                    <Ellipse Grid.Column="0" Height="26" Visibility="{Binding ElementName=champImgBrush,Path=ImageSource, Converter={StaticResource NullToCollapseConverter}}">
                                        <Ellipse.Fill>
                                            <ImageBrush x:Name="champImgBrush" ImageSource="{Binding Path=., Converter={StaticResource ChampionToImageConverter}}"/>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <TextBlock HorizontalAlignment="Left" Text="{Binding Path=.}" Grid.Column="1" Margin="5,0,0,0" Foreground="{DynamicResource FontPrimaryBrush}" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <Grid Grid.Row="2" Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <Button IsEnabled="False" Margin="5,10,5,5" Grid.Column="0" Template="{DynamicResource FlatStyleButton}" Content="Pick"/>
                        <Button IsEnabled="False" Margin="5,10,5,5" Grid.Column="1" Template="{DynamicResource FlatStyleButton}" Content="Ban"/>
                    </Grid>
                </Grid>
            </Grid>

            <Grid Grid.Column="1" Grid.Row="1" Margin="0,20,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Margin="0,10,0,5" HorizontalAlignment="Center">
                        <TextBlock Text="Picks" Foreground="{DynamicResource FontPrimaryBrush}" FontWeight="DemiBold"/>
                        <Border Height="2" Margin="-5,2,-5,0" Background="{DynamicResource aBrushPrimary}"/>
                    </StackPanel>

                    <ListView x:Name="ChampionPicks" Background="Transparent" ItemsSource="{Binding ChampionPicks, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Grid.Row="1">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Padding" Value="4,1"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Opacity="0.6" CornerRadius="5">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="#312862"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="White"/>
                                                    <Setter Property="Opacity" TargetName="Bd" Value="1"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="26"/>
                                        <ColumnDefinition Width="100"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Visibility="{Binding ElementName=champImgBrush,Path=ImageSource, Converter={StaticResource NullToVisibleConverter}}" Grid.Column="0" Height="26">
                                        <Ellipse Fill="{DynamicResource bBrushPrimary}"/>
                                        <Ellipse Grid.Column="0" Height="26">
                                            <Ellipse.Fill>
                                                <ImageBrush ImageSource="{StaticResource NoIcon}"/>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                    </Grid>
                                    <Ellipse Grid.Column="0" Height="26" Visibility="{Binding ElementName=champImgBrush,Path=ImageSource, Converter={StaticResource NullToCollapseConverter}}">
                                        <Ellipse.Fill>
                                            <ImageBrush x:Name="champImgBrush" ImageSource="{Binding Path=., Converter={StaticResource ChampionToImageConverter}}"/>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <TextBlock HorizontalAlignment="Left" Text="{Binding Path=.}" Grid.Column="1" Margin="5,0,0,0" Foreground="{DynamicResource FontPrimaryBrush}" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <Grid Grid.Row="2" Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>

                        <Button IsEnabled="False" Margin="5,10,5,5" Grid.Column="0" Template="{DynamicResource FlatStyleButton}" Content="Remove"/>
                        <Button IsEnabled="False" Margin="5,10,5,5" Grid.Column="1" Template="{DynamicResource FlatStyleButton}" Content="▲"/>
                        <Button IsEnabled="False" Margin="5,10,5,5" Grid.Column="2" Template="{DynamicResource FlatStyleButton}" Content="▼"/>
                    </Grid>
                </Grid>
            </Grid>

            <Grid Grid.Column="2" Grid.Row="1" Margin="0,20,5,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Margin="0,10,0,5" HorizontalAlignment="Center">
                        <TextBlock Text="Bans" Foreground="{DynamicResource FontPrimaryBrush}" FontWeight="DemiBold"/>
                        <Border Height="2" Margin="-5,2,-5,0" Background="{DynamicResource aBrushPrimary}"/>
                    </StackPanel>

                    <ListView x:Name="ChampionBans" Background="Transparent" ItemsSource="{Binding ChampionBans, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Grid.Row="1">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Padding" Value="4,1"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Opacity="0.6" CornerRadius="5">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="#312862"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="White"/>
                                                    <Setter Property="Opacity" TargetName="Bd" Value="1"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="26"/>
                                        <ColumnDefinition Width="100"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Visibility="{Binding ElementName=champImgBrush,Path=ImageSource, Converter={StaticResource NullToVisibleConverter}}" Grid.Column="0" Height="26">
                                        <Ellipse Fill="{DynamicResource bBrushPrimary}"/>
                                        <Ellipse Grid.Column="0" Height="26">
                                            <Ellipse.Fill>
                                                <ImageBrush ImageSource="{StaticResource NoIcon}"/>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                    </Grid>
                                    <Ellipse Grid.Column="0" Height="26" Visibility="{Binding ElementName=champImgBrush,Path=ImageSource, Converter={StaticResource NullToCollapseConverter}}">
                                        <Ellipse.Fill>
                                            <ImageBrush x:Name="champImgBrush" ImageSource="{Binding Path=., Converter={StaticResource ChampionToImageConverter}}"/>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <TextBlock HorizontalAlignment="Left" Text="{Binding Path=.}" Grid.Column="1" Margin="5,0,0,0" Foreground="{DynamicResource FontPrimaryBrush}" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <Grid Grid.Row="2" Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>

                        <Button IsEnabled="False" Margin="5,10,5,5" Grid.Column="0" Template="{DynamicResource FlatStyleButton}" Content="Remove"/>
                        <Button IsEnabled="False" Margin="5,10,5,5" Grid.Column="1" Template="{DynamicResource FlatStyleButton}" Content="▲"/>
                        <Button IsEnabled="False" Margin="5,10,5,5" Grid.Column="2" Template="{DynamicResource FlatStyleButton}" Content="▼"/>
                    </Grid>
                </Grid>
            </Grid>

            <!--<Grid Grid.Column="0" Grid.Row="1" Margin="5,0,20,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Champions" Foreground="{DynamicResource FontPrimaryBrush}" HorizontalAlignment="Center" FontWeight="DemiBold" Grid.Row="0" Margin="0,10,0,0"/>
                <TextBox Grid.Row="1" Style="{DynamicResource FlatTextboxStyle}" Tag="Search a champion..." Margin="5,10,5,0" DataContext="{Binding Champions}" Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}"/>
                <local:ChampionItemListView Grid.Row="3" DataContext="{Binding Champions}" 
                    IncomingItem="{Binding IncomingItemViewModel}"
                    InsertedItem="{Binding InsertedItemViewModel}" 
                    RemovedItem="{Binding RemovedItemViewModel}" 
                    TargetItem="{Binding TargetItemViewModel}" 
                    ItemDropCommand="{Binding ItemReceivedCommand}" 
                    ItemInsertedCommand="{Binding ItemInsertedCommand}" 
                    ItemRemovedCommand="{Binding ItemRemovedCommand}"/>
            </Grid>

            <Grid Grid.Column="1" Grid.Row="1" Margin="20,0,0,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Champion Picks" Foreground="{DynamicResource FontPrimaryBrush}" HorizontalAlignment="Center" FontWeight="DemiBold" Grid.Row="0" Margin="0,10,0,0"/>
                <local:ChampionItemListView Grid.Row="1" DataContext="{Binding ChampionPicks}" 
                  IncomingItem="{Binding IncomingItemViewModel}" 
                  InsertedItem="{Binding InsertedItemViewModel}" 
                  RemovedItem="{Binding RemovedItemViewModel}" 
                  TargetItem="{Binding TargetItemViewModel}" 
                  ItemDropCommand="{Binding ItemReceivedCommand}" 
                  ItemInsertedCommand="{Binding ItemInsertedCommand}"
                  ItemRemovedCommand="{Binding ItemRemovedCommand}"/>
            </Grid>-->

            <!--<Grid Grid.Column="2" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Champion Bans" Foreground="{DynamicResource FontPrimaryBrush}" HorizontalAlignment="Center" FontWeight="DemiBold" Grid.Row="0" Margin="0,10,0,0"/>
                <local:ChampionItemListView Grid.Row="1" DataContext="{Binding ChampionBans}" 
                  IncomingItem="{Binding IncomingItemViewModel}"
                  InsertedItem="{Binding InsertedItemViewModel}" 
                  RemovedItem="{Binding RemovedItemViewModel}" 
                  TargetItem="{Binding TargetItemViewModel}" 
                  ItemDropCommand="{Binding ItemReceivedCommand}"
                  ItemInsertedCommand="{Binding ItemInsertedCommand}" 
                  ItemRemovedCommand="{Binding ItemRemovedCommand}"/>
            </Grid>-->
        </Grid>
    </Grid>
</UserControl>
